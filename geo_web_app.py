#%%
# Monitoramento Agrometeorol√≥gico com Google Earth Engine e Streamlit
import streamlit as st
import geemap.foliumap as geemap
import ee
import plotly.express as px
import pandas as pd
import geopandas as gpd
import json
import os
from datetime import datetime
import altair as alt
import geemap

#%%
# Importar fun√ß√µes auxiliares do c√≥digo functions.py 





#%%
# Configura√ß√£o da p√°gina
st.set_page_config(layout="wide")

# Definindo o √≠cone da p√°gina
st.title("Monitoramento Agrometeorol√≥gico üåç")
st.sidebar.image('utils/logo_geodata_lab.png')

# Adicionando o autor do c√≥digo na barra lateral
st.sidebar.markdown('Desenvolvido por [Sandro de Sena](https://www.linkedin.com/in/sandro-sena/)')

# Adicionando a descri√ß√£o do aplicativo
st.markdown("""
#### üåø Aplicativo de An√°lise Agrometeorol√≥gica  

Este aplicativo permite a visualiza√ß√£o e an√°lise de dados **agrometeorol√≥gicos** diretamente do **Google Earth Engine (GEE)**, facilitando o monitoramento clim√°tico e ambiental em diferentes regi√µes do Brasil.  

### üìå Funcionalidades:
‚úÖ **Selecionar um munic√≠pio ou estado** para an√°lise.  
‚úÖ **Visualizar mapas interativos** com dados espaciais.  
‚úÖ **Explorar s√©ries temporais** de vari√°veis clim√°ticas essenciais.  
‚úÖ **Gerar gr√°ficos e mapas** de indicadores como:  
   - **Precipita√ß√£o e Temperatura M√©dia**  
   - **Balan√ßo H√≠drico e √çndice SPEI** 

A ferramenta √© ideal para acompanhamento de **riscos clim√°ticos**, impactos da variabilidade do clima na agricultura e monitoramento ambiental.  
""")

# Inicializar Google Earth Engine
ee.Initialize()

# Carregar os assets do usu√°rio no GEE
ESTADOS_ASSET = "projects/ee-sandrosenamachado/assets/BR_UF_2023"
MUNICIPIOS_ASSET = "projects/ee-sandrosenamachado/assets/BR_Municipios_2023"

# Fun√ß√£o para obter a lista de estados
def get_estados():
    estados = ee.FeatureCollection(ESTADOS_ASSET)
    lista_estados = estados.aggregate_array("NM_UF").getInfo()
    return sorted(lista_estados)

# Fun√ß√£o para obter munic√≠pios com base no estado selecionado
def get_municipios(estado):
    municipios = ee.FeatureCollection(MUNICIPIOS_ASSET)
    municipios_estado = municipios.filter(ee.Filter.eq("NM_UF", estado))
    lista_municipios = municipios_estado.aggregate_array("NM_MUN").getInfo()
    return sorted(lista_municipios)

# Sidebar para sele√ß√£o de estado e munic√≠pio
st.sidebar.header("Sele√ß√£o de Regi√£o")
estados = get_estados()
estado_selecionado = st.sidebar.selectbox("Escolha o Estado", estados)

if estado_selecionado:
    municipios = get_municipios(estado_selecionado)
    municipio_selecionado = st.sidebar.selectbox("Escolha o Munic√≠pio", municipios)
    
    st.write(f"### Estado Selecionado: {estado_selecionado}")
    st.write(f"### Munic√≠pio Selecionado: {municipio_selecionado}")


# Adicionar campos de datas iniciais e finais na barra lateral
st.sidebar.header("Sele√ß√£o de Per√≠odo")
start_date = st.sidebar.date_input("üìÖ Data inicial", datetime(2023, 1, 1))
end_date = st.sidebar.date_input("üìÖ Data final", datetime.now())

# Cria√ß√£o e configura√ß√£o do mapa
m = geemap.Map()

# Ponto central para o mapa (ajuste as coordenadas conforme necess√°rio)
point = ee.Geometry.Point(-45.259679, -17.871838)
m.centerObject(point, 8)
m.setOptions("HYBRID")


